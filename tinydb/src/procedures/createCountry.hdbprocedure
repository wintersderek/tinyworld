PROCEDURE "tinyworld.tinydb.procedures::createCountry" ( 
	IN im_country NVARCHAR(100),
	IN im_continent NVARCHAR(100),
	OUT ex_code INTEGER,
	OUT ex_error NVARCHAR(100)
)
   LANGUAGE SQLSCRIPT
   SQL SECURITY INVOKER AS
   --DEFAULT SCHEMA <default_schema_name>
   --READS SQL DATA AS
BEGIN
	declare noc integer;
	
	-- Make sure ex_error code is initialized
	ex_code := 0;
	
	select count(*) into noc 
		from "tinyworld.tinydb.data::tinyf.world"
		where "continent" = im_continent;
		
	-- Verify the continent is a real continent
	if :noc > 0 then
		
		select count("name") into noc 
			from "tinyworld.tinydb.data::tinyf.country"
			where "name" = :im_country
			  and "partof.continent" = :im_continent;
			  
		-- Verify the Country in the continent doesn't exist yet.
		if :noc = 0 then
			-- It is okay to insert the new country/continent pair
			insert into "tinyworld.tinydb.data::tinyf.country"
				values (:im_country, :im_continent);
		else
			-- Error!  Country/Continent pair already exists
			ex_code = 2;
			ex_error = 'ERROR: Country ' || :im_country || ' in continent ' || :im_continent || ' already exists.';
		end if;
	else
		-- Error!  Continent does not exist
		ex_code = 1;
		ex_error = 'ERROR: Continent ' || :im_continent || ' does not exists.';
	end if;
   /*************************************
       Write your procedure logic 
   *************************************/
END